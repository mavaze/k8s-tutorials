apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  nodeSelector:       # if both nodeselector and nodeAffinity are specified, both must be satisfied (AND)
    diskType: ssd     # kubectl label nodes <your-node-name> disktype=ssd
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: another-load-label-key
                operator: Un
                values:
                  - another-load-label-value
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:  # If multiple under one nodeSelectorTerm
              - key: topology.kubernetes.io/zone
                operator: In  # Possible values from: In, NotIn, Exists, DoesNotExist, Gt, Lt
                              # NotIn and DoesNotExist allow to define anti-affinity behavior
                values:
                  - asia-mumbai
                  - asia-singapore
  restartPolicy: Always # other values are: Never, OnFailure
  hostNetwork: false # default: false
  dnsPolicy: ClusterFirst # this is default if not specified
  # dnsPolicy: ClusterFirstWithHostNet # if hostNetwork=true
  # dnsPolicy: Default # Needs to be explicitely mentioned and it then uses node's DNS config
  # dnsPolicy: None (uses config from dnsConfig field of PodSpec)
  dnsConfig: # Can work with any dnsPolicy, but explicitly needed when dnsPolicy="None"
    nameservers: # At most 3 in any case but atleast one when dnsPolicy=None otherwise optional
      - "1.2.3.4"
      - "127.0.0.53"
    options: # optional name value pair
      - name: ndots # required with optional value
        value: "2"
      - name: edns0 # required with no value being it optional
    searches: # Optional, List of max 6 search domains each with max 256 chars (can be extended with feature gate ExpandedDNSConfig)
      - ns1.svc.cluster-domain.example
      - my.dns.search.suffix
  containers:
  - name: myapp
    image: <Image>
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 8080
